# RTX1300 Rev.23.00.04 (Wed Aug 10 11:40:27 2022)
# MAC Address : ac:44:f2:b6:6d:98 - ac:44:f2:b6:6d:9f
# Memory 1024Mbytes, 8LAN
# main:  RTX1300 ver=00 serial=S78002167 MAC-Address=ac:44:f2:b6:6d:98 - ac:44:
f2:b6:6d:9f
# Reporting Date: Mar 12 04:14:37 2023
administrator password encrypted ###
login user ###
login user ###
user attribute admin administrator=off connection=off gui-page=dashboard,lan-ma
p,config login-timer=300 multi-session=off
user attribute akira0915n3 administrator=2 connection=serial,ssh,http gui-page=
dashboard,lan-map,config login-timer=21474836
console character ja.utf8
ip route default gateway tunnel 1 filter 500000 500001 gateway pp 1 filter 5000
00 gateway pp 2 filter 500002
ip route 192.168.10.0/24 gateway 192.168.10.254
ip route 192.168.200.0/24 gateway tunnel 3 filter 500000
ipv6 routing on
ipv6 route default gateway dhcp lan2
ipv6 prefix 1 dhcp-prefix@lan2::/64
lan flexible-port lan1=1-4,10 lan2=9 lan4=7 lan5=5-6,8
ip lan1 address 192.168.100.1/24
ip lan1 proxyarp on
ipv6 lan1 address dhcp-prefix@lan2::6a:b270:c000:0/64
ipv6 lan1 prefix change log on
ipv6 lan1 rtadv send 1 o_flag=on
ipv6 lan1 dhcp service server
switch control use lan1 on terminal=on
vlan lan1/1 802.1q vid=900 name=Guest
ip lan1/1 address 192.168.1.1/24
description lan2 flets-cross
lan linkup send-wait-time lan2 5
ip lan2 address dhcp
ip lan2 mtu 1320
ip lan2 tcp mss limit 1280
ipv6 lan2 secure filter in 101000 101001 101002 101003 101100 101103 101101
ipv6 lan2 secure filter out 101099 dynamic 101080 101081 101082 101083 101084 1
01085 101098 101099
ipv6 lan2 dhcp service client
ngn type lan2 ntt
ip lan5 address dhcp
ip lan5 secure filter in 2000
pp select 2
 description pp flest-hayabusa
 pp keepalive interval 30 retry-interval=30 count=12
 pp always-on on
 pppoe use lan4
 pppoe auto disconnect off
 pp auth accept pap chap
 pp auth myname 
 ppp lcp mru on 1454
 ppp ipcp ipaddress on
 ppp ipcp msext on
 ppp ccp type none
 ip pp mtu 1454
 ip pp secure filter in 201003 201020 201021 201022 201023 201024 201025 201030
 201032 201100 201101 201102 201103 201104
 ip pp secure filter out 201013 201020 201021 201022 201023 201024 201025 20102
6 201027 201099 dynamic 201080 201081 201082 201083 201084 201085 201098 201099
 ip pp nat descriptor 1100
 pp enable 2
pp select anonymous
 pp bind tunnel2 tunnel4
 pp auth request mschap-v2
 pp auth username ###
 pp auth username ###
 ppp ipcp ipaddress on
 ppp ipcp msext on
 ppp ccp type none
 ip pp remote address pool dhcp
 ip pp mtu 1258
 pp enable anonymous
tunnel select 1
 tunnel encapsulation ipip
 tunnel endpoint remote address 2404:9200:225:100::65
 ip tunnel mtu 1320
 ip tunnel secure filter in 400123 400003 400020 400021 400022 400023 400024 40
0025 400030 400032 400105 400106 400108 400109 400110 400111 400113 400114 4001
15 400116 400117 400118 400119 400125 400126 400127 400104 400107 400128 400129
 400131 400132 400133 400101 400102 400103 400112 400130
 ip tunnel secure filter out 400013 400020 400021 400022 400023 400024 400025 4
00026 400027 400099 dynamic 400080 400081 400082 400083 400084 400085 400098 40
0099
 ip tunnel nat descriptor 20000
 ip tunnel tcp mss limit 1280
 tunnel enable 1
tunnel select 2
 tunnel encapsulation l2tp
 ipsec tunnel 1
  ipsec sa policy 1 1 esp aes-cbc sha-hmac
  ipsec ike keepalive use 1 off
  ipsec ike nat-traversal 1 on
  ipsec ike pre-shared-key 1 *
  ipsec ike remote address 1 any
 l2tp tunnel disconnect time off
 ip tunnel tcp mss limit auto
 tunnel enable 2
tunnel select 3
 description tunnel うに
 ipsec tunnel 2
  ipsec sa policy 2 3 esp aes-cbc sha-hmac
  ipsec ike keepalive log 3 off
  ipsec ike keepalive use 3 on rfc4306 10 6 0
  ipsec ike nat-traversal 3 on
  ipsec ike pre-shared-key 3 sakana
  ipsec ike remote name 3 uni-cloud.i.open.ad.jp fqdn
  ipsec ike local name 3 ekwacloud.i.open.ad.jp fpdn
 ip tunnel tcp mss limit auto
 ip tunnel mtu 1300
 tunnel enable 3
tunnel select 4
 tunnel encapsulation l2tp
 ipsec tunnel 3
  ipsec sa policy 3 2 esp aes-cbc sha-hmac
  ipsec ike keepalive use 2 off
  ipsec ike nat-traversal 2 on
  ipsec ike pre-shared-key 2 *
  ipsec ike remote address 2 any
 l2tp tunnel disconnect time off
 ip tunnel mtu 1460
 ip tunnel secure filter in 500001
 ip tunnel secure filter out 500001
 ip tunnel tcp mss limit auto
 tunnel enable 4
ip filter 2000 reject * *
ip filter 201000 reject 10.0.0.0/8 * * * *
ip filter 201001 reject 172.16.0.0/12 * * * *
ip filter 201002 reject 192.168.0.0/16 * * * *
ip filter 201003 reject 192.168.100.0/24 * * * *
ip filter 201010 reject * 10.0.0.0/8 * * *
ip filter 201011 reject * 172.16.0.0/12 * * *
ip filter 201012 reject * 192.168.0.0/16 * * *
ip filter 201013 reject * 192.168.100.0/24 * * *
ip filter 201020 reject * * udp,tcp 135 *
ip filter 201021 reject * * udp,tcp * 135
ip filter 201022 reject * * udp,tcp netbios_ns-netbios_ssn *
ip filter 201023 reject * * udp,tcp * netbios_ns-netbios_ssn
ip filter 201024 reject * * udp,tcp 445 *
ip filter 201025 reject * * udp,tcp * 445
ip filter 201026 restrict * * tcpfin * www,21,nntp
ip filter 201027 restrict * * tcprst * www,21,nntp
ip filter 201030 pass * 192.168.100.0/24 icmp * *
ip filter 201031 pass * 192.168.100.0/24 established * *
ip filter 201032 pass * 192.168.100.0/24 tcp * ident
ip filter 201033 pass * 192.168.100.0/24 tcp ftpdata *
ip filter 201034 pass * 192.168.100.0/24 tcp,udp * domain
ip filter 201035 pass * 192.168.100.0/24 udp domain *
ip filter 201036 pass * 192.168.100.0/24 udp * ntp
ip filter 201037 pass * 192.168.100.0/24 udp ntp *
ip filter 201099 pass * * * * *
ip filter 201100 pass * 192.168.100.1 udp * 500
ip filter 201101 pass * 192.168.100.1 esp
ip filter 201102 pass * 192.168.100.1 udp * 4500
ip filter 201103 pass * 192.168.100.1 udp * 1701
ip filter 201104 pass * 192.168.100.1 udp * 1701
ip filter 400000 reject 10.0.0.0/8 * * * *
ip filter 400001 reject 172.16.0.0/12 * * * *
ip filter 400002 reject 192.168.0.0/16 * * * *
ip filter 400003 reject 192.168.100.0/24 * * * *
ip filter 400010 reject * 10.0.0.0/8 * * *
ip filter 400011 reject * 172.16.0.0/12 * * *
ip filter 400012 reject * 192.168.0.0/16 * * *
ip filter 400013 reject * 192.168.100.0/24 * * *
ip filter 400020 reject * * udp,tcp 135 *
ip filter 400021 reject * * udp,tcp * 135
ip filter 400022 reject * * udp,tcp netbios_ns-netbios_ssn *
ip filter 400023 reject * * udp,tcp * netbios_ns-netbios_ssn
ip filter 400024 reject * * udp,tcp 445 *
ip filter 400025 reject * * udp,tcp * 445
ip filter 400026 restrict * * tcpfin * www,21,nntp
ip filter 400027 restrict * * tcprst * www,21,nntp
ip filter 400030 pass * 192.168.100.0/24 icmp * *
ip filter 400031 pass * 192.168.100.0/24 established * *
ip filter 400032 pass * 192.168.100.0/24 tcp * ident
ip filter 400033 pass * 192.168.100.0/24 tcp ftpdata *
ip filter 400034 pass * 192.168.100.0/24 tcp,udp * domain
ip filter 400035 pass * 192.168.100.0/24 udp domain *
ip filter 400036 pass * 192.168.100.0/24 udp * ntp
ip filter 400037 pass * 192.168.100.0/24 udp ntp *
ip filter 400099 pass * * * * *
ip filter 400101 pass * 192.168.100.102 tcp * 8081-8086
ip filter 400102 pass * 192.168.100.102 tcp * 8772
ip filter 400103 pass * 192.168.100.102 tcp * 9601-9606
ip filter 400104 pass * 192.168.100.240 tcp * 25565
ip filter 400105 pass * 192.168.100.203 tcp * 31000
ip filter 400106 pass * 192.168.100.204 tcp * 31001
ip filter 400107 pass * 192.168.100.117 tcp * 10022
ip filter 400108 pass * 192.168.100.235 udp * 7777-7778
ip filter 400109 pass * 192.168.100.235 tcp * 27016
ip filter 400110 pass * 192.168.100.250 udp * 28015
ip filter 400111 pass * 192.168.100.200 tcp * 10050
ip filter 400112 pass * 192.168.100.102 udp * 9601-9606
ip filter 400113 pass * 192.168.100.1 udp * 500
ip filter 400114 pass * 192.168.100.1 udp * 4500
ip filter 400115 pass * 192.168.100.1 udp * 1701
ip filter 400116 pass * 192.168.100.1 esp
ip filter 400117 pass * 192.168.100.235 udp * 27015
ip filter 400118 pass 49.212.135.88,49.212.166.37 192.168.100.244 tcp * 40010
ip filter 400119 reject-nolog 49.212.166.37 192.168.100.240 * * *
ip filter 400120 pass * 192.168.100.117 tcp * ftpdata
ip filter 400121 reject-nolog * * * 135 *
ip filter 400122 pass * 192.168.100.117 tcp * ftpdata
ip filter 400123 reject 5.42.199.51 * * * *
ip filter 400124 pass * 192.168.100.117 tcp * 21
ip filter 400125 pass * 192.168.100.117 * * www,https
ip filter 400126 pass * 192.168.100.117 * * ftpdata,21
ip filter 400127 pass * 192.168.100.117 tcp * 60000-61000
ip filter 400128 pass * 192.168.100.114 tcp * 20022
ip filter 400129 pass * 192.168.100.103 tcp * 20023
ip filter 400130 pass * 192.168.100.102 tcp * 20024
ip filter 400131 pass * 192.168.100.96 tcp * 63333
ip filter 400132 pass * 192.168.100.10 tcp * 5201
ip filter 400133 pass * 192.168.100.96 tcp * 8899
ip filter 500000 restrict * * * * *
ip filter 500001 pass * * * * *
ip filter 500002 pass 192.168.1.0/24 * * * *
ip filter dynamic 201080 * * ftp
ip filter dynamic 201081 * * domain
ip filter dynamic 201082 * * www
ip filter dynamic 201083 * * smtp
ip filter dynamic 201084 * * pop3
ip filter dynamic 201085 * * submission
ip filter dynamic 201098 * * tcp
ip filter dynamic 201099 * * udp
ip filter dynamic 400080 * * ftp
ip filter dynamic 400081 * * domain
ip filter dynamic 400082 * * www
ip filter dynamic 400083 * * smtp
ip filter dynamic 400084 * * pop3
ip filter dynamic 400085 * * submission
ip filter dynamic 400098 * * tcp
ip filter dynamic 400099 * * udp
nat descriptor type 1100 masquerade
nat descriptor masquerade static 1100 1 192.168.100.1 udp 500
nat descriptor masquerade static 1100 2 192.168.100.1 esp
nat descriptor masquerade static 1100 3 192.168.100.1 udp 4500
nat descriptor masquerade static 1100 4 192.168.100.1 udp 1701
nat descriptor type 20000 masquerade
nat descriptor address outer 20000 106.178.112.192
nat descriptor masquerade incoming 20000 discard
nat descriptor masquerade static 20000 2 192.168.100.102 tcp 8081-8086
nat descriptor masquerade static 20000 3 192.168.100.102 tcp 8772
nat descriptor masquerade static 20000 4 192.168.100.102 tcp 9601-9606
nat descriptor masquerade static 20000 6 192.168.100.203 tcp 31000
nat descriptor masquerade static 20000 7 192.168.100.204 tcp 31001
nat descriptor masquerade static 20000 8 192.168.100.240 tcp 25565
nat descriptor masquerade static 20000 9 192.168.100.235 udp 7777-7778
nat descriptor masquerade static 20000 10 192.168.100.235 tcp 27016
nat descriptor masquerade static 20000 11 192.168.100.250 udp 28015
nat descriptor masquerade static 20000 12 192.168.100.200 tcp 10050
nat descriptor masquerade static 20000 13 192.168.100.102 udp 9601-9606
nat descriptor masquerade static 20000 14 192.168.100.1 udp 500
nat descriptor masquerade static 20000 15 192.168.100.1 udp 4500
nat descriptor masquerade static 20000 16 192.168.100.1 udp 1701
nat descriptor masquerade static 20000 17 192.168.100.1 esp
nat descriptor masquerade static 20000 18 192.168.100.235 udp 27015
nat descriptor masquerade static 20000 19 192.168.100.244 tcp 40010
nat descriptor masquerade static 20000 20 192.168.100.117 tcp www,https
nat descriptor masquerade static 20000 21 192.168.100.117 tcp ftpdata
nat descriptor masquerade static 20000 22 192.168.100.117 tcp 21
nat descriptor masquerade static 20000 23 192.168.100.117 tcp 60000-61000
nat descriptor masquerade static 20000 24 192.168.100.117 tcp 10022
nat descriptor masquerade static 20000 25 192.168.100.114 tcp 20022
nat descriptor masquerade static 20000 26 192.168.100.103 tcp 20023
nat descriptor masquerade static 20000 27 192.168.100.102 tcp 20024
nat descriptor masquerade static 20000 28 192.168.100.96 tcp 63333
nat descriptor masquerade static 20000 29 192.168.100.10 tcp 5201
nat descriptor masquerade static 20000 30 192.168.100.96 tcp 8899
ipsec use on
ipsec auto refresh on
ipsec transport 2 1 udp 1701
ipsec transport 4 3 udp 1701
ipv6 filter 101000 pass * * icmp6 * *
ipv6 filter 101001 pass * * tcp * ident
ipv6 filter 101002 pass * * udp * 546
ipv6 filter 101003 pass * * 4
ipv6 filter 101099 pass * * * * *
ipv6 filter 101100 pass 240b:250:7c20:e00::/64 * * * *
ipv6 filter 101101 reject-nolog * * * * *
ipv6 filter 101102 pass * 240b:250:7c20:e00::/64 * * *
ipv6 filter 101103 pass * 240b:250:7c00:1300:192:168:100:96 * * *
ipv6 filter 101104 pass 2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500:
:/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32 240b:250:7c00:1300:245e:a7ff:
fe42:6d41 * * *
ipv6 filter dynamic 101080 * * ftp
ipv6 filter dynamic 101081 * * domain
ipv6 filter dynamic 101082 * * www
ipv6 filter dynamic 101083 * * smtp
ipv6 filter dynamic 101084 * * pop3
ipv6 filter dynamic 101085 * * submission
ipv6 filter dynamic 101098 * * tcp
ipv6 filter dynamic 101099 * * udp
syslog debug on
telnetd service off
dhcp service server
dhcp server rfc2131 compliant except remain-silent
dhcp scope 1 192.168.100.2-192.168.100.90/24
dhcp scope 2 192.168.11.2-192.168.11.191/24 gateway 192.168.11.1
dhcp scope 10000 192.168.1.2-192.168.1.93/24
dhcp client release linkdown on
dns host lan1 lan1/1
dns service recursive
dns service fallback on
dns server pp 1
dns server dhcp lan2
dns server select 500000 1.1.1.1 8.8.8.8 any .
dns server select 500002 pp 2 any . restrict pp 2
dns domain local.ekawacloud.jp
dns private address spoof on
dns static a router-1.ekawacloud.local 192.168.100.1
schedule at 1 startup * lua emfs:/v6plus_map_e.lua
schedule at 2 */* 00:00:00 * ntpdate ntp.nict.jp syslog
l2tp service on
httpd host lan1
sip use off
sshd service on
sshd host lan1
sshd host key generate *
sshd encrypt algorithm aes256-cbc
sftpd host lan1
statistics traffic on
statistics nat on
embedded file v6plus_map_e.lua <<EOF
UPD_SV = "http://fcs.enabler.ne.jp/update"
USERNAME = "kotei5329425770"
PASSWORD = "f5a7u7e0"
WAN_IF = "LAN1"

LOG_PTN = "Add%s+IPv6%s+prefix.+%(Lifetime%:%s+%d+%)%s+via%s+" .. WAN_IF .. "%s
+by"
LOG_LEVEL = "info"
LOG_PFX = "[v6plus]"
FAIL_MSG = "Failed to notify IPv6 address to the update server. (remaining retr
y: %d time(s))"

function logger(msg)
  rt.syslog(LOG_LEVEL, string.format("%s %s", LOG_PFX, msg))
end

local rtn, count, log, result
local req_t = {}
local res_t
req_t.url = string.format("%s?user=%s&pass=%s", UPD_SV, USERNAME, PASSWORD)
req_t.method = "GET"
while true do
  rtn = rt.syslogwatch(LOG_PTN)
  if rtn then
    count = 3
    while true do
      res_t = rt.httprequest(req_t)
      if res_t.rtn1 then
        logger("Notified IPv6 address to the update server.")
        if res_t.code == 200 then
          result = "Succeeded"
        else
          result = "Failed"
        end
        log = string.format("%s to update IPv6 address. (code=%d, body=%s)", re
sult, res_t.code, res_t.body)
        logger(log)
        break
      end
      count = count - 1
      if count > 0 then
        logger(string.format(FAIL_MSG, count))
        rt.sleep(10)
      else
        logger("Failed to notify IPv6 address to the update server.")
        break
      end
    end
  end
end
EOF